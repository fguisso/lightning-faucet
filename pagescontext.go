package main

import (
	"github.com/decred/dcrlnd/lnrpc"
)

// TemplateContext defines the initial context required for rendering
// and control lnfaucet tools.
type TemplateContext struct {
	// Disable generate invoices form
	DisableGenerateInvoices bool

	// Disable invoices payments form
	DisablePayInvoices bool

	// NodeAddr is the full <pubkey>@host:port where the faucet can be
	// connect to.
	NodeAddr string

	// GitCommitHash is the git HEAD's commit hash of
	// $GOPATH/src/github.com/decred/dcrlnd
	GitCommitHash string

	// Network type(mainnet, testnet, simnet)
	Network string
}

// homePageContext defines the initial context required for rendering home
// page. The home page displays some basic statistics, errors in the case of an
// invalid channel submission, and finally a splash page upon successful
// creation of a channel.
type HomePageContext struct {
	// FaucetVersion is version of executable of lightning-faucet
	FaucetVersion string

	// FaucetCommit is the commit from the builing of lightning-faucet
	FaucetCommit string
	// NumCoins is the number of coins in Decred that the faucet has available
	// for channel creation.
	NumCoins float64

	// SubmissionError is a enum that stores if any error took place during
	// the creation of a channel.
	SubmissionError ChanCreationError

	// ChannelTxid is the txid of the created funding channel. If this
	// field is an empty string, then that indicates the channel hasn't yet
	// been created.
	ChannelTxid string

	// NumConfs is the number of confirmations required for the channel to
	// open up.
	NumConfs uint32

	// FormFields contains the values which were submitted through the form.
	FormFields map[string]string

	// PendingChannels contains all of this faucets pending channels.
	PendingChannels []*lnrpc.PendingChannelsResponse_PendingOpenChannel

	// ActiveChannels contains all of this faucets active channels.
	ActiveChannels []*lnrpc.Channel

	// InvoicePaymentRequest the payment request generated by an invoice.
	InvoicePaymentRequest string

	// PayInvoiceAction action
	PayInvoiceAction string

	// OpenChannelAction indicates the form action to open a channel
	OpenChannelAction string

	// GenerateInvoiceAction indicates the form action to generate a new Invoice
	GenerateInvoiceAction string

	// Payment infos
	PaymentDestination string
	PaymentDescription string
	PaymentAmount      string
	PaymentRequest     string
	PaymentHash        string
	PaymentPreimage    string
	PaymentHops        []*lnrpc.Hop

	GlobalContext *TemplateContext
}

// InfoPageContext defines the initial context required for rendering info
// page. The home page displays some basic statistics, errors in the case of an
// invalid channel submission, and finally a splash page upon successful
// creation of a channel.
type InfoPageContext struct {
	// FaucetVersion is version of executable of lightning-faucet
	FaucetVersion string

	// FaucetCommit is the commit from the builing of lightning-faucet
	FaucetCommit string

	// NodeInfo is the response of lnrpc.GetInfo
	NodeInfo *lnrpc.GetInfoResponse

	// PendingChannels contains all of this faucets pending channels.
	PendingChannels []*lnrpc.PendingChannelsResponse_PendingOpenChannel

	// ActiveChannels contains all of this faucets active channels.
	ActiveChannels []*lnrpc.Channel

	GlobalContext *TemplateContext
}
